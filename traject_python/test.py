import numpy as np
from TrajectModule import *



v_max = np.array([3,5,2,5,4,3]).reshape(6,1)
a_max = np.array([6,5,3,5,3,2]).reshape(6,1)
v_1 = np.array([0,0,0,0,0,0])
v_N = np.array([0,0,0,0,0,0])
#T = np.array([1,1,1,1])
path = [np.array([[0,	0.332218093165865,	0.390993263554867,	0.278113608055558,	0.415343428839886,	0.499346721680130],
[0.000397847510453131,	-0.0260972087885916,	-0.141216086764101,	-0.211513736854848,	-0.299550241570072,	-0.353440542118137],
[-0.000403360802127439,	0.0411577245696670,	-0.00504140272939154,	-0.0264189710826858,	-0.0659886190625755,	-0.0902106191194294],
[2.44931698759782e-16,	-0.134446713737023,	-0.0871649967841403,	0.113225323497094,	0.0429922078608828,	7.34293200262053e-16],
[5.51329167419734e-06,	0.163384336059727,	0.261947523890866,	0.564385798495065,	0.489494692178026,	0.443651161237566],
[-2.12117748504772e-16,	0.0493281682601946,	0.408784008611635,	0.509948394288589,	0.858244855290443,	1.07144960511477]]),
               np.array([[1.57079632679490,	1.47426134775749,	1.37989391274817,	1.47463294871070,	1.31563239277807,	1.16681815531503,	1.09408501407334,	1.09203997743356],
[0.327777870339130,	0.144767859703851,	0.0414057230207053,	0.0694370636183670,	-0.0732431172758557,	-0.138909584131399,	-0.270193903232823,	-0.273885222460995],
[0.0768629717686736,	0.307092031963557,	0.494150167986524,	0.748110297080195,	0.879698811766536,	1.11141406470085,	1.06601975997080,	1.06474340898657],
[-3.35024963228523e-16,	0.157722929689119,	0.394412594247518,	0.502639329705382,	0.757709897914300,	0.807805258053265,	1.10796004170356,	1.11639948924688],
[1.16615548468709,	1.25906051457727,	1.21038987977706,	1.24127793387910,	1.16674218917658,	0.900604323402326,	1.05751542328579,	1.06192729032428],
[2.68209689518097e-16,	-0.175142931752010,	-0.392005749351173,	-0.662331319147739,	-0.824901550097224,	-0.905594614918584,	-1.04946847427625,	-1.05351377341870]])]
print(path[0])

#cons = TJ.nonlcon(T, q, v_1, v_N, v_max, a_max,0)
#print(cons)
#[T,c] = TJ.cubicSpline(q,v_1,v_N,v_max,a_max)

TJ = TrajectModule(path,v_1,v_N,v_max,a_max)

print(TJ)






#[v,c] = TJ.Computeviapointvel(T, q, v_1, v_N)
#print(c)
#tau = np.arange(0,10,0.01)
#np.ones(tau.shape)
#print(np.append([np.ones(tau.shape)],[[tau],[tau**2],[tau**3]],axis =0))
#print(c)

